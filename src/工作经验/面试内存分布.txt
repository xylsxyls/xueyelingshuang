内存分布
栈（Stack）：栈是一块内存区域，用于存储函数调用的上下文信息，包括局部变量、函数参数、返回地址等。栈是一种先进后出（LIFO）的数据结构，用于管理函数的调用和返回。

堆（Heap）：堆是动态分配的内存区域，用于存储动态分配的对象，例如通过 new 和 malloc 分配的内存。堆的生存期不同于栈，需要手动释放分配的内存，否则可能导致内存泄漏。

全局数据区/静态存储区（Global Data/Static Storage Area）：这是用于存储全局变量和静态变量的内存区域。全局变量在程序启动时分配，并在程序运行期间一直存在。

常量区（Constants Area）：常量区用于存储常量数据，例如字符串文字。这些数据通常是只读的，不允许被修改。

代码区（Code Area）：代码区存储程序的机器码指令，包括可执行代码和函数。这些指令在程序运行时被执行。

堆栈区（Heap and Stack Area）：有些操作系统将栈和堆分配在同一内存区域，这取决于具体的操作系统和编程环境。在这种情况下，栈通常在高地址端，堆在低地址端。