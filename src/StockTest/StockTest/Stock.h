#pragma once
#include "MysqlCpp/MysqlCppAPI.h"
#include <string>
#include <map>
#include "BigNumber/BigNumberAPI.h"

class Stock
{
public:
	//笔入库
	static bool insertDatabase(MysqlCpp& mysql);

	//均价图
	static std::vector<std::string> getPriceMap(MysqlCpp& mysql, int32_t& useCount, BigNumber& reserveValue);

	//均价图
	static std::vector<std::string> getPriceMapFromLocal(int32_t& useCount, BigNumber& reserveValue);

	//笔地图
	static std::map<int32_t, std::string> getFundMap(MysqlCpp& mysql);

    //获取图
    static void getPriceFromScreen(const std::string& stock);

    //获取自选
	static std::vector<std::vector<std::string>> getSelfStock(MysqlCpp& mysql);

	//获取自定义
	static std::vector<std::vector<std::string>> getDefineStock(const std::string& define);

	//数据转换为均价图
	static std::vector<std::string> priceMap(const std::vector<std::vector<std::string>>& result, int32_t& useCount, BigNumber& reserveValue);

	//获取处理好的笔数据
	static std::vector<std::vector<std::string>> getResultVecFromMysql(MysqlCpp& mysql);

	//获取处理好的笔数据
	static std::vector<std::vector<std::string>> getResultVec();

    static void toPrec(std::string& result, int32_t prec);

	static void printReserveMap(const std::map<BigNumber, std::vector<std::string>>& reserveMap);
};