#pragma once
#include <string>
#include <windows.h>
#include "DmSoftMacro.h"
using namespace std;

class DmSoftAPI DmSoft{
public:
	DmSoft();

	static string Ver();
	static long SetPath(LPCTSTR path);
	static string Ocr(long x1, long y1, long x2, long y2, LPCTSTR color, double sim);
	static long FindStr(long x1, long y1, long x2, long y2, LPCTSTR str, LPCTSTR color, double sim, VARIANT* x, VARIANT* y);
	static long GetResultCount(LPCTSTR str);
	static long GetResultPos(LPCTSTR str, long index, VARIANT* x, VARIANT* y);
	static long DmStrStr(LPCTSTR s, LPCTSTR str);
	static long SendCommand(LPCTSTR cmd);
	static long UseDict(long index);
	static string GetBasePath();
	static long SetDictPwd(LPCTSTR pwd);
	static string OcrInFile(long x1, long y1, long x2, long y2, LPCTSTR pic_name, LPCTSTR color, double sim);
	static long Capture(long x1, long y1, long x2, long y2, LPCTSTR file);
	static long KeyPress(long vk);
	static long KeyDown(long vk);
	static long KeyUp(long vk);
	static long LeftClick();
	static long RightClick();
	static long MiddleClick();
	static long LeftDoubleClick();
	static long LeftDown();
	static long LeftUp();
	static long RightDown();
	static long RightUp();
	static long MoveTo(long x, long y);
	//¸Ãº¯ÊýÓÐbug
	static long MoveR(long rx, long ry);
	static string GetColor(long x, long y);
	static string GetColorBGR(long x, long y);
	static string RGB2BGR(LPCTSTR rgb_color);
	static string BGR2RGB(LPCTSTR bgr_color);
	static long UnBindWindow();
	static long CmpColor(long x, long y, LPCTSTR color, double sim);
	static long ClientToScreen(long hwnd, VARIANT* x, VARIANT* y);
	static long ScreenToClient(long hwnd, VARIANT* x, VARIANT* y);
	static long ShowScrMsg(long x1, long y1, long x2, long y2, LPCTSTR msg, LPCTSTR color);
	static long SetMinRowGap(long row_gap);
	static long SetMinColGap(long col_gap);
	static long FindColor(long x1, long y1, long x2, long y2, LPCTSTR color, double sim, long dir, VARIANT* x, VARIANT* y);
	static string FindColorEx(long x1, long y1, long x2, long y2, LPCTSTR color, double sim, long dir);
	static long SetWordLineHeight(long line_height);
	static long SetWordGap(long word_gap);
	static long SetRowGapNoDict(long row_gap);
	static long SetColGapNoDict(long col_gap);
	static long SetWordLineHeightNoDict(long line_height);
	static long SetWordGapNoDict(long word_gap);
	static long GetWordResultCount(LPCTSTR str);
	static long GetWordResultPos(LPCTSTR str, long index, VARIANT* x, VARIANT* y);
	static string GetWordResultStr(LPCTSTR str, long index);
	static string GetWords(long x1, long y1, long x2, long y2, LPCTSTR color, double sim);
	static string GetWordsNoDict(long x1, long y1, long x2, long y2, LPCTSTR color);
	static long SetShowErrorMsg(long show);
	static long GetClientSize(long hwnd, VARIANT* width, VARIANT* height);
	static long MoveWindow(long hwnd, long x, long y);
	static string GetColorHSV(long x, long y);
	static string GetAveRGB(long x1, long y1, long x2, long y2);
	static string GetAveHSV(long x1, long y1, long x2, long y2);
	static long GetForegroundWindow();
	static long GetForegroundFocus();
	static long GetMousePointWindow();
	static long GetPointWindow(long x, long y);
	static string EnumWindow(long parent, LPCTSTR title, LPCTSTR class_name, long filter);
	static long GetWindowState(long hwnd, long flag);
	static long GetWindow(long hwnd, long flag);
	static long GetSpecialWindow(long flag);
	static long DmSetWindowText(long hwnd, LPCTSTR text);
	static long SetWindowSize(long hwnd, long width, long height);
	static long GetWindowRect(long hwnd, VARIANT* x1, VARIANT* y1, VARIANT* x2, VARIANT* y2);
	static string GetWindowTitle(long hwnd);
	static string GetWindowClass(long hwnd);
	static long SetWindowState(long hwnd, long flag);
	static long CreateFoobarRect(long hwnd, long x, long y, long w, long h);
	static long CreateFoobarRoundRect(long hwnd, long x, long y, long w, long h, long rw, long rh);
	static long CreateFoobarEllipse(long hwnd, long x, long y, long w, long h);
	static long CreateFoobarCustom(long hwnd, long x, long y, LPCTSTR pic, LPCTSTR trans_color, double sim);
	static long FoobarFillRect(long hwnd, long x1, long y1, long x2, long y2, LPCTSTR color);
	static long FoobarDrawText(long hwnd, long x, long y, long w, long h, LPCTSTR text, LPCTSTR color, long align);
	static long FoobarDrawPic(long hwnd, long x, long y, LPCTSTR pic, LPCTSTR trans_color);
	static long FoobarUpdate(long hwnd);
	static long FoobarLock(long hwnd);
	static long FoobarUnlock(long hwnd);
	static long FoobarSetFont(long hwnd, LPCTSTR font_name, long size, long flag);
	static long FoobarTextRect(long hwnd, long x, long y, long w, long h);
	static long FoobarPrintText(long hwnd, LPCTSTR text, LPCTSTR color);
	static long FoobarClearText(long hwnd);
	static long FoobarTextLineGap(long hwnd, long gap);
	static long Play(LPCTSTR file);
	static long FaqCapture(long x1, long y1, long x2, long y2, long quality, long delay, long time);
	static long FaqRelease(long handle);
	static string FaqSend(LPCTSTR server, long handle, long request_type, long time_out);
	static long Beep(long fre, long delay);
	static long FoobarClose(long hwnd);
	static long MoveDD(long dx, long dy);
	static long FaqGetSize(long handle);
	static long LoadPic(LPCTSTR pic_name);
	static long FreePic(LPCTSTR pic_name);
	static long GetScreenData(long x1, long y1, long x2, long y2);
	static long FreeScreenData(long handle);
	static long WheelUp();
	static long WheelDown();
	static long SetMouseDelay(LPCTSTR type, long delay);
	static long SetKeypadDelay(LPCTSTR type, long delay);
	static string GetEnv(long index, LPCTSTR name);
	static long SetEnv(long index, LPCTSTR name, LPCTSTR value);
	static long SendString(long hwnd, LPCTSTR str);
	static long DelEnv(long index, LPCTSTR name);
	static string GetPath();
	static long SetDict(long index, LPCTSTR dict_name);
	static long FindPic(long x1, long y1, long x2, long y2, LPCTSTR pic_name, LPCTSTR delta_color, double sim, long dir, VARIANT* x, VARIANT* y);
	static string FindPicEx(long x1, long y1, long x2, long y2, LPCTSTR pic_name, LPCTSTR delta_color, double sim, long dir);
	static long SetClientSize(long hwnd, long width, long height);
	static long ReadInt(long hwnd, LPCTSTR addr, long type);
	static float ReadFloat(long hwnd, LPCTSTR addr);
	static double ReadDouble(long hwnd, LPCTSTR addr);
	static string FindInt(long hwnd, LPCTSTR addr_range, long int_value_min, long int_value_max, long type);
	static string FindFloat(long hwnd, LPCTSTR addr_range, float float_value_min, float float_value_max);
	static string FindDouble(long hwnd, LPCTSTR addr_range, double double_value_min, double double_value_max);
	static string FindString(long hwnd, LPCTSTR addr_range, LPCTSTR string_value, long type);
	static long GetModuleBaseAddr(long hwnd, LPCTSTR module_name);
	static string MoveToEx(long x, long y, long w, long h);
	static string MatchPicName(LPCTSTR pic_name);
	static long AddDict(long index, LPCTSTR dict_info);
	static long EnterCri();
	static long LeaveCri();
	static long WriteInt(long hwnd, LPCTSTR addr, long type, long v);
	static long WriteFloat(long hwnd, LPCTSTR addr, float v);
	static long WriteDouble(long hwnd, LPCTSTR addr, double v);
	static long WriteString(long hwnd, LPCTSTR addr, long type, LPCTSTR v);
	static long AsmAdd(LPCTSTR asm_ins);
	static long AsmClear();
	static long AsmCall(long hwnd, long mode);
	static long FindMultiColor(long x1, long y1, long x2, long y2, LPCTSTR first_color, LPCTSTR offset_color, double sim, long dir, VARIANT* x, VARIANT* y);
	static string FindMultiColorEx(long x1, long y1, long x2, long y2, LPCTSTR first_color, LPCTSTR offset_color, double sim, long dir);
	static string AsmCode(long base_addr);
	static string Assemble(LPCTSTR asm_code, long base_addr, long is_upper);
	static long SetWindowTransparent(long hwnd, long v);
	static string ReadData(long hwnd, LPCTSTR addr, long len);
	static long WriteData(long hwnd, LPCTSTR addr, LPCTSTR data);
	static string FindData(long hwnd, LPCTSTR addr_range, LPCTSTR data);
	static long SetPicPwd(LPCTSTR pwd);
	static long Log(LPCTSTR info);
	static string FindStrE(long x1, long y1, long x2, long y2, LPCTSTR str, LPCTSTR color, double sim);
	static string FindColorE(long x1, long y1, long x2, long y2, LPCTSTR color, double sim, long dir);
	static string FindPicE(long x1, long y1, long x2, long y2, LPCTSTR pic_name, LPCTSTR delta_color, double sim, long dir);
	static string FindMultiColorE(long x1, long y1, long x2, long y2, LPCTSTR first_color, LPCTSTR offset_color, double sim, long dir);
	static long SetExactOcr(long exact_ocr);
	static string ReadString(long hwnd, LPCTSTR addr, long type, long len);
	static long FoobarTextPrintDir(long hwnd, long dir);
	static string OcrEx(long x1, long y1, long x2, long y2, LPCTSTR color, double sim);
	static long SetDisplayInput(LPCTSTR mode);
	static long GetTime();
	static long GetScreenWidth();
	static long GetScreenHeight();
	static long BindWindowEx(long hwnd, LPCTSTR display, LPCTSTR mouse, LPCTSTR keypad, LPCTSTR public_desc, long mode);
	static string GetDiskSerial();
	static string Md5(LPCTSTR str);
	static string GetMac();
	static long ActiveInputMethod(long hwnd, LPCTSTR id);
	static long CheckInputMethod(long hwnd, LPCTSTR id);
	static long FindInputMethod(LPCTSTR id);
	static long GetCursorPos(VARIANT* x, VARIANT* y);
	static long BindWindow(long hwnd, LPCTSTR display, LPCTSTR mouse, LPCTSTR keypad, long mode);
	static long DmFindWindow(LPCTSTR class_name, LPCTSTR title_name);
	static long GetScreenDepth();
	static long SetScreen(long width, long height, long depth);
	static long ExitOs(long type);
	static string GetDir(long type);
	static long GetOsType();
	static long DmFindWindowEx(long parent, LPCTSTR class_name, LPCTSTR title_name);
	static long SetExportDict(long index, LPCTSTR dict_name);
	static string GetCursorShape();
	static long DownCpu(long rate);
	static string GetCursorSpot();
	static long SendString2(long hwnd, LPCTSTR str);
	static long FaqPost(LPCTSTR server, long handle, long request_type, long time_out);
	static string FaqFetch();
	static string FetchWord(long x1, long y1, long x2, long y2, LPCTSTR color, LPCTSTR word);
	static long CaptureJpg(long x1, long y1, long x2, long y2, LPCTSTR file, long quality);
	static long FindStrWithFont(long x1, long y1, long x2, long y2, LPCTSTR str, LPCTSTR color, double sim, LPCTSTR font_name, long font_size, long flag, VARIANT* x, VARIANT* y);
	static string FindStrWithFontE(long x1, long y1, long x2, long y2, LPCTSTR str, LPCTSTR color, double sim, LPCTSTR font_name, long font_size, long flag);
	static string FindStrWithFontEx(long x1, long y1, long x2, long y2, LPCTSTR str, LPCTSTR color, double sim, LPCTSTR font_name, long font_size, long flag);
	static string GetDictInfo(LPCTSTR str, LPCTSTR font_name, long font_size, long flag);
	static long SaveDict(long index, LPCTSTR file);
	static long GetWindowProcessId(long hwnd);
	static string GetWindowProcessPath(long hwnd);
	static long LockInput(long lock);
	static string GetPicSize(LPCTSTR pic_name);
	static long GetID();
	static long CapturePng(long x1, long y1, long x2, long y2, LPCTSTR file);
	static long CaptureGif(long x1, long y1, long x2, long y2, LPCTSTR file, long delay, long time);
	static long ImageToBmp(LPCTSTR pic_name, LPCTSTR bmp_name);
	static long FindStrFast(long x1, long y1, long x2, long y2, LPCTSTR str, LPCTSTR color, double sim, VARIANT* x, VARIANT* y);
	static string FindStrFastEx(long x1, long y1, long x2, long y2, LPCTSTR str, LPCTSTR color, double sim);
	static string FindStrFastE(long x1, long y1, long x2, long y2, LPCTSTR str, LPCTSTR color, double sim);
	static long EnableDisplayDebug(long enable_debug);
	static long CapturePre(LPCTSTR file);
	static long RegEx(LPCTSTR code, LPCTSTR Ver, LPCTSTR ip);
	static string GetMachineCode();
	static long SetClipboard(LPCTSTR data);
	static string GetClipboard();
	static long GetNowDict();
	static long Is64Bit();
	static long GetColorNum(long x1, long y1, long x2, long y2, LPCTSTR color, double sim);
	static string EnumWindowByProcess(LPCTSTR process_name, LPCTSTR title, LPCTSTR class_name, long filter);
	static long GetDictCount(long index);
	static long GetLastError();
	static string GetNetTime();
	static long EnableGetColorByCapture(long en);
	static long CheckUAC();
	static long SetUAC(long uac);
	static long DisableFontSmooth();
	static long CheckFontSmooth();
	static long SetDisplayAcceler(long level);
	static long DmFindWindowByProcess(LPCTSTR process_name, LPCTSTR class_name, LPCTSTR title_name);
	static long DmFindWindowByProcessId(long process_id, LPCTSTR class_name, LPCTSTR title_name);
	static string ReadIni(LPCTSTR section, LPCTSTR key, LPCTSTR file);
	static long WriteIni(LPCTSTR section, LPCTSTR key, LPCTSTR v, LPCTSTR file);
	static long RunApp(LPCTSTR path, long mode);
	static long delay(long mis);
	static long DmFindWindowSuper(LPCTSTR spec1, long flag1, long type1, LPCTSTR spec2, long flag2, long type2);
	static string ExcludePos(LPCTSTR all_pos, long type, long x1, long y1, long x2, long y2);
	static string FindNearestPos(LPCTSTR all_pos, long type, long x, long y);
	static string SortPosDistance(LPCTSTR all_pos, long type, long x, long y);
	static long FindPicMem(long x1, long y1, long x2, long y2, LPCTSTR pic_info, LPCTSTR delta_color, double sim, long dir, VARIANT* x, VARIANT* y);
	static string FindPicMemEx(long x1, long y1, long x2, long y2, LPCTSTR pic_info, LPCTSTR delta_color, double sim, long dir);
	static string FindPicMemE(long x1, long y1, long x2, long y2, LPCTSTR pic_info, LPCTSTR delta_color, double sim, long dir);
	static string AppendPicAddr(LPCTSTR pic_info, long addr, long size);
	static long WriteFile(LPCTSTR file, LPCTSTR content);
	static long Stop(long id);
	static long SetDictMem(long index, long addr, long size);
	static string GetNetTimeSafe();
	static long ForceUnBindWindow(long hwnd);
	static string ReadIniPwd(LPCTSTR section, LPCTSTR key, LPCTSTR file, LPCTSTR pwd);
	static long WriteIniPwd(LPCTSTR section, LPCTSTR key, LPCTSTR v, LPCTSTR file, LPCTSTR pwd);
	static long DecodeFile(LPCTSTR file, LPCTSTR pwd);
	static long KeyDownChar(LPCTSTR key_str);
	static long KeyUpChar(LPCTSTR key_str);
	static long KeyPressChar(LPCTSTR key_str);
	static long KeyPressStr(LPCTSTR key_str, long delay);
	static long EnableKeypadPatch(long en);
	static long EnableKeypadSync(long en, long time_out);
	static long EnableMouseSync(long en, long time_out);
	static long DmGuard(long en, LPCTSTR type);
	static long FaqCaptureFromFile(long x1, long y1, long x2, long y2, LPCTSTR file, long quality);
	static string FindIntEx(long hwnd, LPCTSTR addr_range, long int_value_min, long int_value_max, long type, long step, long multi_thread, long mode);
	static string FindFloatEx(long hwnd, LPCTSTR addr_range, float float_value_min, float float_value_max, long step, long multi_thread, long mode);
	static string FindDoubleEx(long hwnd, LPCTSTR addr_range, double double_value_min, double double_value_max, long step, long multi_thread, long mode);
	static string FindStringEx(long hwnd, LPCTSTR addr_range, LPCTSTR string_value, long type, long step, long multi_thread, long mode);
	static string FindDataEx(long hwnd, LPCTSTR addr_range, LPCTSTR data, long step, long multi_thread, long mode);
	static long EnableRealMouse(long en, long mousedelay, long mousestep);
	static long EnableRealKeypad(long en);
	static long SendStringIme(LPCTSTR str);
	static long FoobarDrawLine(long hwnd, long x1, long y1, long x2, long y2, LPCTSTR color, long style, long width);
	static string FindStrEx(long x1, long y1, long x2, long y2, LPCTSTR str, LPCTSTR color, double sim);
	static long IsBind(long hwnd);
	static long SetDisplayDelay(long t);
	static long GetDmCount();
	static long DisableScreenSave();
	static long DisablePowerSave();
	static long SetMemoryHwndAsProcessId(long en);
	static long FindShape(long x1, long y1, long x2, long y2, LPCTSTR offset_color, double sim, long dir, VARIANT* x, VARIANT* y);
	static string FindShapeE(long x1, long y1, long x2, long y2, LPCTSTR offset_color, double sim, long dir);
	static string FindShapeEx(long x1, long y1, long x2, long y2, LPCTSTR offset_color, double sim, long dir);
	static string FindStrS(long x1, long y1, long x2, long y2, LPCTSTR str, LPCTSTR color, double sim, VARIANT* x, VARIANT* y);
	static string FindStrExS(long x1, long y1, long x2, long y2, LPCTSTR str, LPCTSTR color, double sim);
	static string FindStrFastS(long x1, long y1, long x2, long y2, LPCTSTR str, LPCTSTR color, double sim, VARIANT* x, VARIANT* y);
	static string FindStrFastExS(long x1, long y1, long x2, long y2, LPCTSTR str, LPCTSTR color, double sim);
	static string FindPicS(long x1, long y1, long x2, long y2, LPCTSTR pic_name, LPCTSTR delta_color, double sim, long dir, VARIANT* x, VARIANT* y);
	static string FindPicExS(long x1, long y1, long x2, long y2, LPCTSTR pic_name, LPCTSTR delta_color, double sim, long dir);
	static long ClearDict(long index);
	static string GetMachineCodeNoMac();
	static long GetClientRect(long hwnd, VARIANT* x1, VARIANT* y1, VARIANT* x2, VARIANT* y2);
	static long EnableFakeActive(long en);
	static long GetScreenDataBmp(long x1, long y1, long x2, long y2, VARIANT* data, VARIANT* size);
	static long EncodeFile(LPCTSTR file, LPCTSTR pwd);
	static string GetCursorShapeEx(long type);
	static long FaqCancel();
	static string IntToData(long int_value, long type);
	static string FloatToData(float float_value);
	static string DoubleToData(double double_value);
	static string StringToData(LPCTSTR string_value, long type);
	static long SetMemoryFindResultToFile(LPCTSTR file);
	static long EnableBind(long en);
	static long SetSimMode(long mode);
	static long LockMouseRect(long x1, long y1, long x2, long y2);
	static long SendPaste(long hwnd);
	static long IsDisplayDead(long x1, long y1, long x2, long y2, long t);
	static long GetKeyState(long vk);
	static long DmCopyFile(LPCTSTR src_file, LPCTSTR dst_file, long over);
	static long IsFileExist(LPCTSTR file);
	static long DmDeleteFile(LPCTSTR file);
	static long DmMoveFile(LPCTSTR src_file, LPCTSTR dst_file);
	static long CreateFolder(LPCTSTR folder_name);
	static long DeleteFolder(LPCTSTR folder_name);
	static long GetFileLength(LPCTSTR file);
	static string ReadFile(LPCTSTR file);
	static long WaitKey(long key_code, long time_out);
	static long DeleteIni(LPCTSTR section, LPCTSTR key, LPCTSTR file);
	static long DeleteIniPwd(LPCTSTR section, LPCTSTR key, LPCTSTR file, LPCTSTR pwd);
	static long EnableSpeedDx(long en);
	static long EnableIme(long en);
	static long Reg(LPCTSTR code, LPCTSTR Ver);
	static string SelectFile();
	static string SelectDirectory();
	static long LockDisplay(long lock);
	static long FoobarSetSave(long hwnd, LPCTSTR file, long en, LPCTSTR header);
	static string EnumWindowSuper(LPCTSTR spec1, long flag1, long type1, LPCTSTR spec2, long flag2, long type2, long sort);
	static long DownloadFile(LPCTSTR url, LPCTSTR save_file, long timeout);
	static long EnableKeypadMsg(long en);
	static long EnableMouseMsg(long en);
	static long RegNoMac(LPCTSTR code, LPCTSTR Ver);
	static long RegExNoMac(LPCTSTR code, LPCTSTR Ver, LPCTSTR ip);
	static long SetEnumWindowDelay(long delay);
	static long FindMulColor(long x1, long y1, long x2, long y2, LPCTSTR color, double sim);
	static string GetDict(long index, long font_index);
};